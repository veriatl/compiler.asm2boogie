<?xml version="1.0" encoding="ISO-8859-1"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:atl="http://www.eclipse.org/gmt/2005/ATL" xmlns:ocl="http://www.eclipse.org/gmt/2005/OCL">
  <atl:Module location="1:1-60:3" name="a2b">
    <inModels location="7:21-7:27" name="IN" metamodel="/2"/>
    <outModels location="7:8-7:15" name="OUT" metamodel="/1"/>
    <elements xsi:type="atl:LazyMatchedRule" location="16:1-24:3" name="r4">
      <commentsBefore>-- A3 never mapped</commentsBefore>
      <commentsBefore>-- r1 and  r2 overlapped on a1, silencely executable if model doesn't have one of the pattern.</commentsBefore>
      <commentsBefore>-- r3 rule cannnot terminate, TYPE MISMATCH</commentsBefore>
      <commentsBefore>-- the filter of r4 will never fulfill, yet still executable</commentsBefore>
      <outPattern location="20:4-23:4">
        <commentsBefore>-- lazy rule don't have filter, but syntax allow that.</commentsBefore>
        <elements xsi:type="atl:SimpleOutPatternElement" location="21:6-23:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="21:10-21:14" name="B2" model="/1"/>
          <bindings location="22:3-22:31" propertyName="name">
            <value xsi:type="ocl:OperatorCallExp" location="22:11-22:31" operationName="+">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="22:11-22:21" name="f">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="22:11-22:19" name="assoc">
                  <source xsi:type="ocl:VariableExp" location="22:11-22:13" referredVariable="/0/@elements.0/@inPattern/@elements.0"/>
                </source>
              </source>
              <arguments xsi:type="ocl:StringExp" location="22:24-22:31" stringSymbol="NEVER"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="17:4-19:30">
        <commentsAfter>-- lazy rule don't have filter, but syntax allow that.</commentsAfter>
        <elements xsi:type="atl:SimpleInPatternElement" location="18:6-18:14" varName="a1" variableExp="/0/@elements.0/@inPattern/@filter/@source/@source /0/@elements.0/@outPattern/@elements.0/@bindings.0/@value/@source/@source/@source">
          <type xsi:type="ocl:OclModelElement" location="18:10-18:14" name="A1" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperationCallExp" location="19:4-19:29" operationName="oclIsUndefined">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="19:4-19:12" name="assoc">
            <source xsi:type="ocl:VariableExp" location="19:4-19:6" referredVariable="/0/@elements.0/@inPattern/@elements.0"/>
          </source>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="26:1-40:2" name="r2">
      <outPattern location="30:2-39:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="31:3-39:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="31:7-31:11" name="B1" model="/1"/>
          <bindings location="32:4-32:16" propertyName="name">
            <value xsi:type="ocl:StringExp" location="32:12-32:16" stringSymbol="r2"/>
          </bindings>
          <bindings location="34:4-38:12" propertyName="bssoc">
            <commentsBefore>--bssoc &lt;- thisModule.r3(a1),	-- unsafty casting, notice the input type of rule r3</commentsBefore>
            <value xsi:type="ocl:IfExp" location="34:13-38:12">
              <thenExpression xsi:type="ocl:OperationCallExp" location="35:7-35:24" operationName="r4">
                <commentsAfter>-- unreachable</commentsAfter>
                <source xsi:type="ocl:VariableExp" location="35:7-35:17" referredVariable="/3"/>
                <arguments xsi:type="ocl:VariableExp" location="35:21-35:23" referredVariable="/0/@elements.1/@inPattern/@elements.0"/>
              </thenExpression>
              <condition xsi:type="ocl:OperationCallExp" location="34:16-34:41" operationName="oclIsUndefined">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="34:16-34:24" name="assoc">
                  <source xsi:type="ocl:VariableExp" location="34:16-34:18" referredVariable="/0/@elements.1/@inPattern/@elements.0"/>
                </source>
              </condition>
              <elseExpression xsi:type="ocl:OperationCallExp" location="37:8-37:25" operationName="r3">
                <source xsi:type="ocl:VariableExp" location="37:8-37:18" referredVariable="/4"/>
                <arguments xsi:type="ocl:VariableExp" location="37:22-37:24" referredVariable="/0/@elements.1/@inPattern/@elements.0"/>
              </elseExpression>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="27:2-29:34">
        <elements xsi:type="atl:SimpleInPatternElement" location="28:3-28:12" varName="a1" variableExp="/0/@elements.1/@inPattern/@filter/@source/@source/@source /0/@elements.1/@outPattern/@elements.0/@bindings.1/@value/@condition/@source/@source /0/@elements.1/@outPattern/@elements.0/@bindings.1/@value/@thenExpression/@arguments.0 /0/@elements.1/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@arguments.0">
          <type xsi:type="ocl:OclModelElement" location="28:8-28:12" name="A1" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="29:4-29:33" operationName="not">
          <source xsi:type="ocl:OperationCallExp" location="29:8-29:33" operationName="oclIsUndefined">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="29:8-29:16" name="assoc">
              <source xsi:type="ocl:VariableExp" location="29:8-29:10" referredVariable="/0/@elements.1/@inPattern/@elements.0"/>
            </source>
          </source>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="43:1-50:2" name="r1">
      <outPattern location="46:2-49:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="47:3-49:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="47:7-47:11" name="B1" model="/1"/>
          <bindings location="48:3-48:15" propertyName="name">
            <value xsi:type="ocl:StringExp" location="48:11-48:15" stringSymbol="r1"/>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="44:2-45:12">
        <elements xsi:type="atl:SimpleInPatternElement" location="45:3-45:12" varName="a1">
          <type xsi:type="ocl:OclModelElement" location="45:8-45:12" name="A1" model="/2"/>
        </elements>
      </inPattern>
    </elements>
    <elements xsi:type="atl:LazyMatchedRule" location="52:1-60:3" name="r3">
      <outPattern location="55:4-59:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="56:6-59:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="56:10-56:14" name="B2" model="/1"/>
          <bindings location="57:3-57:28" propertyName="name">
            <value xsi:type="ocl:OperationCallExp" location="57:11-57:28" operationName="r3">
              <source xsi:type="ocl:VariableExp" location="57:11-57:21" referredVariable="/5"/>
              <arguments xsi:type="ocl:VariableExp" location="57:25-57:27" referredVariable="/0/@elements.3/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="58:3-58:16" propertyName="bssoc">
            <commentsBefore>--  type mismatch</commentsBefore>
            <commentsAfter>-- b2 even don't have bassoc attribute, and type mismatch</commentsAfter>
            <value xsi:type="ocl:StringExp" location="58:12-58:16" stringSymbol="r3">
              <commentsAfter>-- b2 even don't have bassoc attribute, and type mismatch</commentsAfter>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="53:4-54:14">
        <elements xsi:type="atl:SimpleInPatternElement" location="54:6-54:14" varName="a2" variableExp="/0/@elements.3/@outPattern/@elements.0/@bindings.0/@value/@arguments.0">
          <type xsi:type="ocl:OclModelElement" location="54:10-54:14" name="A2" model="/2"/>
        </elements>
      </inPattern>
    </elements>
  </atl:Module>
  <ocl:OclModel location="7:14-7:15" name="B" elements="/0/@elements.0/@outPattern/@elements.0/@type /0/@elements.1/@outPattern/@elements.0/@type /0/@elements.2/@outPattern/@elements.0/@type /0/@elements.3/@outPattern/@elements.0/@type" model="/0/@outModels.0"/>
  <ocl:OclModel location="7:26-7:27" name="A" elements="/0/@elements.0/@inPattern/@elements.0/@type /0/@elements.1/@inPattern/@elements.0/@type /0/@elements.2/@inPattern/@elements.0/@type /0/@elements.3/@inPattern/@elements.0/@type" model="/0/@inModels.0"/>
  <ocl:VariableDeclaration location="35:7-35:17" varName="thisModule" variableExp="/0/@elements.1/@outPattern/@elements.0/@bindings.1/@value/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="37:8-37:18" varName="thisModule" variableExp="/0/@elements.1/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@source"/>
  <ocl:VariableDeclaration location="57:11-57:21" varName="thisModule" variableExp="/0/@elements.3/@outPattern/@elements.0/@bindings.0/@value/@source"/>
</xmi:XMI>
